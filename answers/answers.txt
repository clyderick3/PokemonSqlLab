1. Imported.

2-1. SELECT name FROM types; Normal --> Flying

2-2. mysql> Select * FROM Pokemons where ID = '45';
    +----+-------+--------------+----------------+
    | id | name  | primary_type | secondary_type |
    +----+-------+--------------+----------------+
    | 45 | Eevee |            1 |           NULL |
    +----+-------+--------------+----------------+
    1 row in set (0.02 sec)

2-3. Select * From Pokemon; 656 rows in set of Pokemon.

2-4. How many types are there? 18 types of Pokemon.
        SELECT COUNT(*) FROM types;

2-5. mysql> SELECT COUNT(*) FROM pokemons WHERE secondary_type <> 'NULL'
         -> ;
     +----------+
     | COUNT(*) |
     +----------+
     |      316 |
     +----------+
     1 row in set, 1 warning (0.02 sec)

 3-1. What is each pokemon's primary type?

 mysql>     select pokemons.name, types.name
          -> from pokemons
          -> join types on pokemons.primary_type = types.id;

 3-2. What is Rufflet's secondary type?

 mysql> select * from pokemons where name = 'Rufflet';
 +-----+---------+--------------+----------------+
 | id  | name    | primary_type | secondary_type |
 +-----+---------+--------------+----------------+
 | 644 | Rufflet |            1 |             18 |
 +-----+---------+--------------+----------------+
 1 row in set (0.01 sec). Type 18.

 mysql> SELECT pokemons.name, types.name
     -> FROM pokemons
     -> JOIN types
     -> ON pokemons.secondary_type = types.id
     -> WHERE pokemons.name = 'rufflet';
 +---------+--------+
 | name    | name   |
 +---------+--------+
 | Rufflet | Flying |
 +---------+--------+
 1 row in set (0.00 sec)

 3-3. What are the names of the pokemon that belong to the trainer with trainerID 303?

 mysql> SELECT pokemons.name FROM pokemons JOIN pokemon_trainer ON pokemons.id = pokemon_trainer.pokemon_id WHERE pokemon_trainer.trainerid= '303';
 +-----------+
 | name      |
 +-----------+
 | Wailord   |
 | Vileplume |
 +-----------+
 2 rows in set (0.02 sec)

 3-4. How many pokemon have a secondary type Poison?

mysql> select * from pokemons where secondary_type = '7'; = 31 rows;
mysql> select count(*) from pokemons
    -> join types
    -> on pokemons.secondary_type = types.id
    -> where types.id = '7';
+----------+
| count(*) |
+----------+
|       31 |
+----------+
1 row in set (0.01 sec)

3-5. What are all the primary types and how many pokemon have that type?

mysql> select count(*), types.name from pokemons join types on pokemons.primary_type = types.id group by pokemons.primary_type;
+----------+----------+
| count(*) | name     |
+----------+----------+
|       90 | Normal   |
|       95 | Water    |
|       59 | Grass    |
|       38 | Rock     |
|       38 | Fire     |
|       29 | Ground   |
|       27 | Poison   |
|       61 | Bug      |
|       35 | Electric |
|       22 | Dragon   |
|       19 | Steel    |
|       24 | Dark     |
|       25 | Fighting |
|       38 | Psychic  |
|       19 | Ghost    |
|       14 | Fairy    |
|       22 | Ice      |
|        1 | Flying   |
+----------+----------+
18 rows in set (0.02 sec)

3-6 How many pokemon at level 100 does each trainer with at least one level 100 Pokemons have? (Hint: your query should not display a trainer?

mysql> select count(*) from pokemon_trainer where pokelevel = 100 group by trainerid;

3-7. How many pokemon only belong to one trainer and no other?

mysql> SELECT count(*), pokemons.name FROM pokemon_trainer JOIN pokemons ON pokemon_trainer.pokemon_id = pokemons.id GROUP BY pokemon_id
    -> Having count(*) = 1;
+----------+------------+
| count(*) | name       |
+----------+------------+
|        1 | Clawitzer  |
|        1 | Barbaracle |
|        1 | Tynamo     |
|        1 | Rufflet    |
|        1 | Lugia      |
|        1 | Binacle    |
|        1 | Malamar    |
|        1 | Zekrom     |
|        1 | Reshiram   |
|        1 | Happiny    |
|        1 | Zweilous   |
|        1 | Swirlix    |
|        1 | Spewpa     |
+----------+------------+
13 rows in set (0.07 sec)

4. The strongest character was decided on the maxhp since
maxhp is a good comparison to how strong a Pokemon can be.

SELECT p.name as 'Pokemon Name', t.trainername 'Trainer Name',
pt.pokelevel 'Level', primary_type.name 'Primary Type',
secondary_type.name 'Secondary Type'
FROM pokemon_trainer as pt join trainers as t on pt.trainerID = t.trainerID
JOIN pokemons as p on p.id = pt.pokemon_id
JOIN types primary_type on p.primary_type = primary_type.id
JOIN types secondary_type on p.secondary_type = secondary_type.id
ORDER BY pt.maxhp DESC limit 10;
